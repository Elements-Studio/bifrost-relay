server:
  port: 8680
  max-http-header-size: 102400
  compression:
    enabled: true
    min-response-size: 20480  #20K 以上开启gzip
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml

spring:
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${STARCOIN_MYSQL_URL}
    username: ${STARCOIN_MYSQL_USER}
    password: ${STARCOIN_MYSQL_PWD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      # 不配置默认与maximum-pool-size相同
      minimum-idle: 5 #minimum number of idle connections maintained by HikariCP in a connection pool
      # 连接池最大连接数，默认是10
      maximum-pool-size: 20
      connection-test-query: SELECT 1
      idle-timeout: 500000 #maximum idle time for connection
      connection-timeout: 20000 #maximum number of milliseconds that a client will wait for a connection
      max-lifetime: 1800000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.

  jpa:
    show-sql: true
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false

  flyway:
    baselineOnMigrate: true
    # 如果指定 schema 包含了其他表但没有 flyway schema history 表的话，在执行 flyway migrate 命令之前须先执行 flyway baseline 命令。
    # 设置 spring.flyway.baseline-on-migrate 为 true 后，flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
    baselineVersion: 0.0.0
    cleanDisabled: true # flyway 的 clean 命令会删除指定 schema 下的所有 table，应该禁掉
    enabled: true # 启用或禁用 flyway
    locations: classpath:db/migration # 设定 SQL 脚本的目录，比如取值为 classpath:db/migration,filesystem:/sql-migrations
    outOfOrder: false # 生产环境关闭 outOfOrder
    #spring.flyway.encoding=
    # Encoding of SQL migrations (default: UTF-8)
    #spring.flyway.schemas=
    # 需要 flyway 管控的 schema list，缺省的使用 dbsource.connection 直连上的那个 schema，
    # 可以指定多个schema，但仅会在第一个 schema 下建立 metadata 表，也仅在第一个 schema 应用 migration sql 脚本，
    # 但 flyway clean 命令会依次在这些 schema 下都执行一遍。


starcoin:
  seeds: ${STARCOIN_SEEDS}
  network: ${STARCOIN_NETWORK}
  json-rpc-url: ${STARCOIN_JSON_RPC_URL}
  sender-private-key: ${STARCOIN_SENDER_PRIVATE_KEY}
  sender-address: ${STARCOIN_SENDER_ADDRESS}
  sender-public-key: ${STARCOIN_SENDER_PUBLIC_KEY}
  chain-id: ${STARCOIN_CHAIN_ID}
  # ----------------------------------
  # starcoin transaction
  transaction-resend-task-service:
    fixed-delay: 10000
    resend-created-before-seconds: 5
  transaction-confirm-task-service:
    fixed-delay: 10000
    confirm-Transaction-created-before-seconds: 5
  # ----------------------------------
  # from starcoin...
  event-filter:
    from-address: ${STARCOIN_EVENT_FILTER_FROM_ADDRESS}
    cross-chain-deposit-event-type-tag: ${STARCOIN_CROSS_CHAIN_DEPOSIT_EVENT_TYPE_TAG}
  event-confirm-task-service:
    fixed-delay: 5000
    confirm-event-created-before-seconds: 5
  to-ethereum:
    create-transaction-for-event-confirmed-before-seconds: 5
    transaction-create-fixed-delay: 5000
  # ----------------------------------
  needed-block-confirmations: 1


ethereum:
  websocket-service-url: ${ETHEREUM_WS_SERVICE_URL}
  http-service-url: ${ETHEREUM_HTTP_SERVICE_URL}
  chain-id: ${ETHEREUM_CHAIN_ID}
  mint-stc-contract-address: ${ETHEREUM_MINT_STC_CONTRACT_ADDRESS}
  sender-address: ${ETHEREUM_SENDER_ADDRESS}
  sender-private-key: ${ETHEREUM_SENDER_PRIVATE_KEY}
  # ----------------------------------
  # ethereum transaction
  transaction-resend-task-service:
    fixed-delay: 10000
    resend-created-before-seconds: 5
  transaction-confirm-task-service:
    fixed-delay: 10000
    confirm-Transaction-created-before-seconds: 5
  # ----------------------------------
  # form ethereum...
  withdraw-log-filter-address: ${ETHEREUM_WITHDRAW_LOG_FILTER_ADDRESS}
  log-confirm-task-service:
    fixed-delay: 5000
    confirm-log-created-before-seconds: 5
  to-starcoin:
    create-transaction-for-log-confirmed-before-seconds: 5
    transaction-create-fixed-delay: 5000
  # ----------------------------------
  needed-block-confirmations: 1


token-price-service:
  base-url: ${TOKEN_PRICE_SERVICE_BASE_URL}
  get-wei-to-nano-stc-exchange-rate-url: ${token-price-service.base-url}/v1/exchangeRates/WEI_NANOSTC


ok:
  http:
    connect-timeout: 3
    max-idle-connections: 20
    read-timeout: 6
    write-timeout: 6
    keep-alive-duration: 300


logging:
  level:
    org:
      springframework:
        web:
          filter:
            CommonsRequestLoggingFilter: INFO
      starcoin:
        bifrost: INFO
      hibernate:
        tool:
          hbm2ddl: INFO

